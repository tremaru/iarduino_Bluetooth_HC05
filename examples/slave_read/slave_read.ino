//  Данный скетч демонстрирует работу Trema-модуля bluetooth в режиме ведомого (slave)
//  Модуль принимает данные от другого Trema-модуля bluetooth, который передаёт данные (скетч master_send)
//  Библиотека написана http://iarduino.ru только для Trema-модулей bluetooth и не будет работать с другими модулями

#include <SoftwareSerial.h>                // Подключаем библиотеку SoftwareSerial для общения с модулем по программной шине UART, до подключения библиотеки iarduino_Bluetooth_HC05.
#include <iarduino_Bluetooth_HC05.h>       // Подключаем библиотеку iarduino_Bluetooth_HC05 для работы с модулем
SoftwareSerial softSerial(2,3);            // Создаём объект softSerial указывая выводы RX, TX (можно указывать любые выводы Arduino UNO)
                                           // - назначенный вывод RX Arduino (в данном примере вывод 2) подключается к выводу TX модуля
                                           // - назначенный вывод TX Arduino (в данном примере вывод 3) подключается к выводу RX модуля
iarduino_Bluetooth_HC05 hc05(4);           // Создаём объект hc05 указывая любой вывод Arduino. Назначенный вывод подключается к выводу K модуля
int myArray[3];                            // Объявляем массив в который будем получать данные, можно создавать массивы или переменные любых типов в .т.ч и char
bool i;                                    // Объявляем переменную для вывода результатов работы функций

void setup(){
//  Инициируем передачу данных по аппаратной шине UART для вывода результата в монитор
    Serial.begin(9600);
//  Инициируем работу с модулем hc05, указывая объект UART через который осуществляется связь
    i=hc05.begin(softSerial);
    Serial.print("begin: "); if(i){Serial.println("Ok");} else {Serial.println("Error");}
//  Создаем ведомую роль модулю, указывая его имя и pin-код (в примере имя = "MyName", pin-код = "4567")
    i=hc05.createSlave("MyName", "4567");
    Serial.print("create slave: "); if(i){Serial.println("Ok");} else {Serial.println("Error");}
}

//  Инициализация модуля hc05.begin(); и создание ведомой роли hc05.createSlave(); может занять несколько секунд
//  В этом примере модуль подключается через программный UART используя библиотеку SoftwareSerial, а при инициализации работы с модулем hc05.begin() указывается объект softSerial
//  Но модуль можно подключать и к аппаратному UART, тогда не нужно подключать библиотеку SoftwareSerial и создавать объект softSerial,
//  а при инициализации работы с модулем hc05.begin() нужно указать Serial или (для ArduinoMega) Serial1, Serial2, Serial3.

void loop (){
    if(hc05.available()){                // Если есть принятые данные, то ...
        hc05.read(myArray);              // Читаем полученные данные в ранее объявленный массив myArray
        Serial.println(myArray[0]);      // Выводим 0 элемент массива myArray в монитор последовательного порта
        Serial.println(myArray[1]);      // Выводим 1 элемент массива myArray в монитор последовательного порта
        Serial.println(myArray[2]);      // Выводим 2 элемент массива myArray в монитор последовательного порта
    }
}

//  Результат выполнения функций можно и не отслеживать:
//  hc05.begin(softSerial);              // Выполнение функции без возврата результата в переменную i
//  hc05.createSlave("MyName", "4567"))  // Выполнение функции без возврата результата в переменную i

//  Если функцию available() вызвать с параметрами: ... if(hc05.available(&j,&k){ ... } ...
//  то в переменную j запишется количество элементов принятого массива (или 0 если принята переменная)
//  a  в переменную k запишется количество байт принятого массива или принятой переменной
//  Trema-модуль в режиме ведомого (slave) может не только принимать, но и отправлять данные функцией send().
