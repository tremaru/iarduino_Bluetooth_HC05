//  Данный скетч демонстрирует работу Trema-модуля bluetooth
//  Модуль выолняет AT-команды пользователя. Со списком AT-команд Вы можете ознакомиться на сайте http://iarduino.ru
//  Библиотека написана http://iarduino.ru только для Trema-модулей bluetooth и не будет работать с другими модулями

#include <SoftwareSerial.h>                // Подключаем библиотеку SoftwareSerial для общения с модулем по программной шине UART, до подключения библиотеки iarduino_Bluetooth_HC05.
#include <iarduino_Bluetooth_HC05.h>       // Подключаем библиотеку iarduino_Bluetooth_HC05 для работы с модулем
SoftwareSerial softSerial(2,3);            // Создаём объект softSerial указывая выводы RX, TX (можно указывать любые выводы Arduino UNO)
                                           // - назначенный вывод RX Arduino (в данном примере вывод 2) подключается к выводу TX модуля
                                           // - назначенный вывод TX Arduino (в данном примере вывод 3) подключается к выводу RX модуля
iarduino_Bluetooth_HC05 hc05(4);           // Создаём объект hc05 указывая любой вывод Arduino. Назначенный вывод подключается к выводу K модуля
bool i;                                    // Объявляем переменную для вывода результатов работы функций

void setup(){
//  Инициируем передачу данных по аппаратной шине UART для вывода результата в монитор
    Serial.begin(9600);
//  Инициируем работу с модулем hc05, указывая объект UART через который осуществляется связь
    i=hc05.begin(softSerial);
    Serial.print("begin: "); if(i){Serial.println("Ok");} else {Serial.println("Error");}
}                                        

//  Инициализация модуля hc05.begin(); может занять несколько секунд
//  В этом примере модуль подключается через программный UART используя библиотеку SoftwareSerial, а при инициализации работы с модулем hc05.begin() указывается объект softSerial
//  Но модуль можно подключать и к аппаратному UART, тогда не нужно подключать библиотеку SoftwareSerial и создавать объект softSerial,
//  а при инициализации работы с модулем hc05.begin() нужно указать Serial или (для ArduinoMega) Serial1, Serial2, Serial3.

void loop (){
//  Выполняем AT-команды используя функцию hc05.runAT()
//  Функция hc05.runAT() возвращает строку ответа модуля
    Serial.println(hc05.runAT("AT+NAME?\r\n"));                  // Получаем текущее имя модуля
    Serial.println(hc05.runAT("AT+ADDR?\r\n"));                  // Получаем адрес модуля
    Serial.println(hc05.runAT("AT+PSWD?\r\n"));                  // Получаем PIN-код модуля
    Serial.println(hc05.runAT("AT+PSWD=1234\r\n"));              // Устанавливаем PIN-код модуля = 1234
    Serial.println(hc05.runAT("AT+PSWD?\r\n"));                  // Получаем PIN-код модуля
    Serial.println(hc05.runAT("AT+STATE?\r\n"));                 // Получаем состояние модуля
//  Выполнять AT-команды можно не выводя ответ модуля, а лишь отслежывать результат их выполнения
    hc05.runAT("AT+PSWD=6789\r\n");                              // Устанавливаем PIN-код модуля = 6789
    if(hc05.flgResult < 0){Serial.println("Set PIN - Error"  );} // Если hc05.flgResult <0 значит в ответе модуля была строка с Error:(x)
    if(hc05.flgResult > 0){Serial.println("Set PIN - OK"     );} // Если hc05.flgResult >0 значит в ответе модуля была строка с OK\r\n
    if(hc05.flgResult ==0){Serial.println("Set PIN - Unknown");} // Если hc05.flgResult ==0 значит в ответе модуля не было ни Error ни OK
//  Ждём 5 секунд (можно и не ждать, если Вы быстро читаете d:ь)
    delay(5000);
}

//  Функция hc05.runAT(команда); может принимать и дополнительные параметры:
//  hc05.runAT(команда, [ таймаут [, флаг1 ]] );
//  - таймаут (по умолчанию 500мс) - количество миллисекунд в течении которых функция ждёт ответ от модуля.
//  - флаг1   (по умолчанию true ) - установка данного флага разрешает досрочный выход (до истечения таймаута) при наличии успешного ответа от модуля.
